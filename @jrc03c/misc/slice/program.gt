--------------------------------------------------------------------------------
-- @jrc03c/slice
--------------------------------------------------------------------------------
-- url    : https://www.guidedtrack.com/programs/30091
-- tests  : https://www.guidedtrack.com/programs/30092
-- author : Josh Castle (joshrcastle@gmail.com)
--------------------------------------------------------------------------------
-- inputs:
--     `x` = a collection or string
--     `start` = an index at which to start the slice
--     `end` = an index at which to end the slice
-- outputs:
--     `slice` = a subset of `x`
--------------------------------------------------------------------------------

>> error_title = "@jrc03c/slice"
>> error_is_fatal = "no"

*if: not x
	>> error_message = "You must define a variable called <code>x</code> that has a string or collection value from which a slice will be taken!"
	*program: @jrc03c/show-error
	*goto: CleanupLabel3c46b8c752d6fdbec7d52af09c196d24

*if: (not (x.type = "collection")) and (not (x.type = "string"))
	>> error_message = "The variable <code>x</code> must have a string or collection value! (The value you provided for <code>x</code> had a(n) {x.type} value.)"
	*program: @jrc03c/show-error
	*goto: CleanupLabel3c46b8c752d6fdbec7d52af09c196d24

*if: not start
	>> start = 1

*if: (not (start.type = "number"))
	>> error_message = "The variable <code>start</code> must have a positive integer value! (The value you provided for <code>start</code> was a(n) {start.type} value.)"
	*program: @jrc03c/show-error
	*goto: CleanupLabel3c46b8c752d6fdbec7d52af09c196d24

*if: start < 1
	>> error_message = "The variable <code>start</code> must have a positive integer value! (The value you provided for <code>start</code> was {start}.)"
	*program: @jrc03c/show-error
	*goto: CleanupLabel3c46b8c752d6fdbec7d52af09c196d24

*if: not stop
	>> stop = x.size + 1

*if: (not (stop.type = "number"))
	>> error_message = "The variable <code>stop</code> must have a positive integer value! (The value you provided for <code>stop</code> was a(n) {stop.type} value.)"
	*program: @jrc03c/show-error
	*goto: CleanupLabel3c46b8c752d6fdbec7d52af09c196d24

*if: stop < start
	>> error_message = "The variable <code>stop</code> must have a value greater than or equal to the value of the variable <code>start</code>! (Your <code>start</code> and <code>stop</code> values, respectively, were {start} and {stop}.)"
	*program: @jrc03c/show-error
	*goto: CleanupLabel3c46b8c752d6fdbec7d52af09c196d24

*if: stop > x.size + 1
	>> stop = x.size + 1

>> i = start
>> slice = []

*while: i < stop
	>> slice.add(x[i])
	>> i = i + 1

-- cleanup
*label: CleanupLabel3c46b8c752d6fdbec7d52af09c196d24

>> error_is_fatal = ""
>> error_message = ""
>> error_title = ""