--------------------------------------------------------------------------------
-- @jrc03c/sort-by-index/tests
--------------------------------------------------------------------------------
-- target : https://www.guidedtrack.com/programs/31390/edit
-- author : Josh Castle (joshrcastle@gmail.com)
--------------------------------------------------------------------------------

>> error_title = "@jrc03c/sort-by-index/tests"
>> error_is_fatal = "no"
>> success_title = "@jrc03c/sort-by-index/tests"

--------------------------------------------------------------------------------

*html
	<h1 style="color: black"><b>All of these tests should pass:</b></h1>

>> test = "Sort a nested collection of integers by index 1 without setting the `ascending` variable"

>> x = [[3, 9], [1, 0], [4, 6], [5, 2], [7, 8]]
>> index = 1

*program: @jrc03c/sort-by-index

>> y_pred = x_sorted
>> y_true = [[1, 0], [3, 9], [4, 6], [5, 2], [7, 8]]
>> failed = "no"

*for: i, row in y_true
	*for: j, v in row
		*if: not (v = y_pred[i][j])
			>> failed = "yes"

*if: failed = "yes"
	>> error_message = test
	*program: @jrc03c/show-error

*if: failed = "no"
	>> success_message = test
	*program: @jrc03c/show-success

--------------------------------------------------------------------------------

>> test = "Sort a nested collection of floats by index 2 in ascending order"
>> ascending = "yes"

>> x = [[2.2324813041271168, 0.8330841045995703, -0.5110996258543467], [0.26639380681789276, -0.9612843611801415, -0.49731026406562795], [0.3172828895414529, -0.8032729732654448, -0.6563782804719217], [0.5566237081111556, -0.2452201628776275, 2.1390552631141], [2.2161798808816613, 0.04180193234210872, 0.10178143317798342], [-0.48710740683931986, -1.0265375129490555, 1.232503149353387], [-0.4751176416291913, 0.46889799204293486, 0.5073911394712072], [-0.708122462299111, -1.8923150317093511, -1.0114597257530198], [-0.4944422740560709, -0.3344748170346329, -0.18866283055791425], [-0.36620910497153697, 1.397641371014849, 1.1695445449302737]]

>> index = 2

*program: @jrc03c/sort-by-index

>> y_pred = x_sorted

>> y_true = [[-0.708122462299111, -1.8923150317093511, -1.0114597257530198], [-0.48710740683931986, -1.0265375129490555, 1.232503149353387], [0.26639380681789276, -0.9612843611801415, -0.49731026406562795], [0.3172828895414529, -0.8032729732654448, -0.6563782804719217], [-0.4944422740560709, -0.3344748170346329, -0.18866283055791425], [0.5566237081111556, -0.2452201628776275, 2.1390552631141], [2.2161798808816613, 0.04180193234210872, 0.10178143317798342], [-0.4751176416291913, 0.46889799204293486, 0.5073911394712072], [2.2324813041271168, 0.8330841045995703, -0.5110996258543467], [-0.36620910497153697, 1.397641371014849, 1.1695445449302737]]

>> failed = "no"

*for: i, row in y_true
	*for: j, v in row
		*if: not (v = y_pred[i][j])
			>> failed = "yes"

*if: failed = "yes"
	>> error_message = test
	*program: @jrc03c/show-error

*if: failed = "no"
	>> success_message = test
	*program: @jrc03c/show-success

--------------------------------------------------------------------------------

>> test = "Sort a nested collection of strings by index 3 in descending order"
>> ascending = "no"

>> x = [["d3g50d36", "c275097a", "c8edge2b", "gd957c2b", "f36d729f", "g661dgfe", "8f66b364", "fc2758a1", "39e9g1b4", "5ff3g481"], ["de3gffe0", "eag36fe2", "g55f690a", "1261g412", "23b9d3g6", "6521e697", "89begabd", "71dc46be", "acd30217", "6f4acac3"], ["f2g77gdc", "464aa4e7", "ed5ae1da", "5ec0d3bd", "18ee5971", "0g3049b0", "5a5f74a1", "5355ed1e", "477dgd8b", "22ad3bb6"], ["8e2a078g", "891eg5f0", "3553da06", "b8dfc9gf", "c7e42acb", "0762092a", "b703a1da", "a8f69e9b", "b00c7b5a", "06e1g9fd"], ["c1g0552f", "9473643e", "c1e7070d", "fbd88c2e", "9ee77c6g", "c3edg8a0", "427321a3", "09f875d4", "141a1fd8", "2a558g28"]]

>> index = 3

*program: @jrc03c/sort-by-index

>> y_pred = x_sorted

>> y_true = [["de3gffe0", "eag36fe2", "g55f690a", "1261g412", "23b9d3g6", "6521e697", "89begabd", "71dc46be", "acd30217", "6f4acac3"], ["f2g77gdc", "464aa4e7", "ed5ae1da", "5ec0d3bd", "18ee5971", "0g3049b0", "5a5f74a1", "5355ed1e", "477dgd8b", "22ad3bb6"], ["d3g50d36", "c275097a", "c8edge2b", "gd957c2b", "f36d729f", "g661dgfe", "8f66b364", "fc2758a1", "39e9g1b4", "5ff3g481"], ["c1g0552f", "9473643e", "c1e7070d", "fbd88c2e", "9ee77c6g", "c3edg8a0", "427321a3", "09f875d4", "141a1fd8", "2a558g28"], ["8e2a078g", "891eg5f0", "3553da06", "b8dfc9gf", "c7e42acb", "0762092a", "b703a1da", "a8f69e9b", "b00c7b5a", "06e1g9fd"]]

>> failed = "no"

*for: i, row in y_true
	*for: j, v in row
		*if: not (v = y_pred[i][j])
			>> failed = "yes"

*if: failed = "yes"
	>> error_message = test
	*program: @jrc03c/show-error

*if: failed = "no"
	>> success_message = test
	*program: @jrc03c/show-success

--------------------------------------------------------------------------------

>> test = "Clean up upon completion"
>> appendage = ""
>> x = []
>> index = 1
>> ascending = "yes"

*program: @jrc03c/sort-by-index

>> failed = "no"

*if: not (ascending = "")
	>> appendage = "(The value of `ascending` was {ascending}!)"
	>> failed = "yes"

*if: not (best = "")
	>> appendage = "(The value of `best` was {best}!)"
	>> failed = "yes"

*if: not (i = "")
	>> appendage = "(The value of `i` was {i}!)"
	>> failed = "yes"

*if: not (v = "")
	>> appendage = "(The value of `v` was {v}!)"
	>> failed = "yes"

*if: not (x_copy = "")
	>> appendage = "(The value of `x_copy` was {x_copy}!)"
	>> failed = "yes"

*if: failed = "yes"
	>> error_message = "{test} {appendage}"
	*program: @jrc03c/show-error

*if: failed = "no"
	>> success_message = test
	*program: @jrc03c/show-success

--------------------------------------------------------------------------------

*html
	<br>
	<h1 style="color: black"><b>All of these tests should fail:</b></h1>

>> x = []
>> index = 0
>> ascending = "yes"
*program: @jrc03c/sort-by-index

>> x = []
>> index = 1
>> ascending = "nope"
*program: @jrc03c/sort-by-index

*button: Okay
