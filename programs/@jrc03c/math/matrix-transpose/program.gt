-------------------------------------------------------------------------------
-- @jrc03c/math/matrix-transpose
-------------------------------------------------------------------------------
-- url    : https://www.guidedtrack.com/programs/32368/edit
-- tests  : https://www.guidedtrack.com/programs/32369/edit
-- author : Josh Castle (joshrcastle@gmail.com)
-------------------------------------------------------------------------------
-- inputs:
--     `matrix` = the matrix to transpose
-- outputs:
--     `matrix_transposed` = the transposed matrix
-------------------------------------------------------------------------------
-- NOTE: A random `*trigger` keyword have been added as a workaround to avoid
-- the "Maximum call stack size exceeded" JS error.
-------------------------------------------------------------------------------

*if: not matrix
	>> matrix = ""
	>> error_title = "@jrc03c/math/matrix-transpose"
	>> error_message = "You must define a `matrix` variable that holds a matrix (i.e., a collection of collections)!"
	*program: @jrc03c/show-error
	*goto: clean-up

>> matrix_type = matrix.type

*if: not (matrix_type = "collection")
	>> matrix = ""
	>> error_title = "@jrc03c/math/matrix-transpose"
	>> error_message = "The `matrix` variable must be a matrix (i.e., a collection of collections)!"
	*program: @jrc03c/show-error
	*goto: clean-up

>> orig = []
>> orig.combine(matrix)

*program: @jrc03c/check-if-matrix

*if: is_a_matrix = "no"
	>> error_title = "@jrc03c/math/matrix-transpose"
	>> error_message = "The `matrix` variable must be a matrix (i.e., a collection of collections)!"
	*program: @jrc03c/show-error
	*goto: clean-up

>> matrix_transposed = []

*for: i, row in orig
	*for: j, value in row
		*trigger: 9af1bd3b

		*if: j > matrix_transposed.size
			>> matrix_transposed.add([])
			
		>> matrix_transposed[j].add(value)
		
-------------------------------------------------------------------------------

*label: clean-up

>> i = ""
>> is_a_matrix = ""
>> j = ""
>> new_row = ""
>> orig = ""
>> row = ""
>> value = ""